{"version":3,"sources":["firebase-config.js","context/UserAuthContext.js","components/ProtectedRoute.js","components/Login.js","components/Home.js","components/ForgetPass.js","components/SignUp.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","userAuthContext","createContext","UserAuthContextProvider","children","useState","user","setUser","useEffect","unsubscribe","onAuthStateChanged","currentUser","Provider","value","signUp","email","password","createUserWithEmailAndPassword","logIn","signInWithEmailAndPassword","logOut","signOut","googleSignIn","googleAuthProvider","GoogleAuthProvider","signInWithPopup","useUserAuth","useContext","ProtectedRoute","to","eye","icon","faEye","Login","passwordShown","setPasswordShown","setEmail","setPassword","error","setError","navigate","useNavigate","handleSubmit","e","a","preventDefault","message","handleGoogleSignIn","console","className","style","textDecoration","onSubmit","onClick","src","alt","placeholder","type","name","onChange","target","id","href","Home","messages","setMessages","newMess","setNewMess","messRef","collection","getDocs","then","snapshot","tempMess","docs","forEach","doc","push","data","catch","err","addMess","log","addDoc","displayName","image","photoURL","time","Date","toTimeString","split","handleLogOut","modalIsOpen","setIsOpen","title","isOpen","onRequestClose","map","chat","ForgetPass","Signup","success","setSuccess","App","path","element","SignUp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fb7c8c5.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from '@firebase/firestore'\r\nimport { getAuth} from '@firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCc_BJwaGZz5Bxi3LedoZmknVcyvmv0kPk\",\r\n  authDomain: \"chatsmith-48efb.firebaseapp.com\",\r\n  projectId: \"chatsmith-48efb\",\r\n  storageBucket: \"chatsmith-48efb.appspot.com\",\r\n  messagingSenderId: \"950740455504\",\r\n  appId: \"1:950740455504:web:7c0f62ae669a97c14d4155\",\r\n  measurementId: \"G-6VQ5SM2R4Q\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const db = getFirestore(app);\r\nexport const auth = getAuth(app);\r\n\r\nexport default app;\r\n\r\n\r\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n  GoogleAuthProvider,\r\n  signInWithPopup\r\n} from 'firebase/auth';\r\nimport { auth } from '../firebase-config';\r\n\r\n\r\n\r\nconst userAuthContext = createContext();\r\n\r\n\r\n\r\nexport function UserAuthContextProvider({ children }) {\r\n\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  function signUp(email, password) {\r\n      return createUserWithEmailAndPassword(auth, email, password);\r\n  }\r\n\r\n  function logIn(email, password) {\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  }\r\n\r\n  function logOut() {\r\n    return signOut(auth);\r\n  }\r\n\r\n  function googleSignIn() {\r\n     const googleAuthProvider = new GoogleAuthProvider();\r\n     return signInWithPopup(auth, googleAuthProvider);\r\n  }\r\n\r\n  useEffect(() => {\r\n     const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\r\n          setUser(currentUser);\r\n     });\r\n     return () => {\r\n       unsubscribe();\r\n     }\r\n  }, [])\r\n\r\n    return (\r\n      <userAuthContext.Provider value={{user, signUp, logIn, logOut, googleSignIn}}>\r\n        {children}\r\n      </userAuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport function useUserAuth() {\r\n  return useContext(userAuthContext);\r\n}","import React from 'react'\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n\r\n  let { user } = useUserAuth();\r\n\r\n  if(!user) {\r\n     return <Navigate to=\"/\" />\r\n  }\r\n  return children;\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\n\r\n\r\nconst eye = <FontAwesomeIcon icon={faEye} />;\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  }\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { logIn, googleSignIn } = useUserAuth();\r\n\r\n  //Email and Password Sign in Method\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try{\r\n      await logIn(email, password);\r\n      navigate(\"/home\");\r\n    }\r\n    catch(err) {\r\n       setError(err.message);\r\n    }\r\n  }\r\n\r\n  //Google Sign in Method\r\n  const handleGoogleSignIn = async (e) => {\r\n     e.preventDefault();\r\n     try{\r\n      await googleSignIn();\r\n      navigate(\"/home\");\r\n     }catch(err) {\r\n       console.error(err.message);\r\n     }\r\n  }\r\n\r\n\r\n \r\n\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n        <nav className=\"nav-bar\">\r\n          <h1 className=\"chatsmit-head\">chatsmith_</h1>\r\n        </nav>\r\n\r\n        <main className=\"main-box\">\r\n\r\n          <div className=\"form\">\r\n\r\n            <h2 className=\"sign-head\">Sign In to your account</h2>\r\n            <div className=\"new-sign-up\">\r\n              <h2 className=\"new\">New to chatsmith_ ?</h2>\r\n              <Link to=\"/signup\" style={{textDecoration:\"none\"}}>\r\n                <h2 className=\"signup\">Sign up</h2>\r\n              </Link>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n            <div className=\"container\">\r\n                <div className=\"block-box\">\r\n\r\n                  <button \r\n                   onClick={handleGoogleSignIn}\r\n                   className=\"btn-google\">\r\n                    <img  className=\"google-logo\"src=\"./images/google-icon.svg\" alt=\"google\" />\r\n                    <h2 className=\"text-google\">CONTINUE WITH GOOGLE</h2>\r\n                  </button>\r\n\r\n                  {error && <div className=\"error-msg\">\r\n                    <p>{error}</p>\r\n                  </div>}\r\n\r\n                  <div className=\"input\">\r\n                     <h2>Email Address</h2>\r\n                     <div>\r\n                       <input \r\n                          className=\"input-email\" \r\n                          placeholder=\"Enter Email\" \r\n                          type=\"text\" \r\n                          name=\"email\" \r\n                          onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                     </div>\r\n\r\n                     <h2 className=\"password\">Password</h2>\r\n\r\n                     <div className=\"password-toggle-box\">\r\n                       <input \r\n                         className=\"input-password\" \r\n                         placeholder=\"Enter Password\" \r\n                         type={passwordShown ? \"text\" : \"password\"} \r\n                         name=\"password\"\r\n                         onChange={e => setPassword(e.target.value)} \r\n                       />\r\n                       <span>\r\n                        <i onClick={togglePasswordVisiblity}>{eye}</i>\r\n                       </span>\r\n                     </div>\r\n\r\n                     <div>\r\n                       <button className=\"btn-login\">SIGN IN</button>\r\n                     </div>\r\n\r\n                  </div>\r\n\r\n                  <Link to='/forgetpassword' style={{textDecoration:\"none\"}}> \r\n                    <h2 className=\"forget-pass\">Forget Password?</h2>\r\n                  </Link>\r\n\r\n                </div>\r\n  \r\n            </div>\r\n            </form>\r\n\r\n            <div className=\"footer\">\r\n                <h1><a id=\"github-link\" href=\"https://github.com/aniket-6234/chatsmith-real-time-chat-app\" target=\"_blank\">GitHub Link</a></h1>\r\n            </div>\r\n\r\n          </div>\r\n        </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, {useState, useEffect} from 'react'\r\nimport { db } from '../firebase-config';\r\nimport { collection, getDocs, addDoc, setDoc, doc } from 'firebase/firestore';\r\nimport './style.css'\r\nimport Modal from 'react-modal';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMess, setNewMess] = useState(\"\");\r\n\r\n  const messRef = collection(db, 'messages');\r\n\r\n  const showMess = () => {\r\n    getDocs(messRef)\r\n    .then((snapshot) => {\r\n      // console.log(snapshot.docs);\r\n      let tempMess = [];\r\n      snapshot.docs.forEach((doc) => {\r\n        tempMess.push({ ...doc.data(), id: doc.id });\r\n      })\r\n      // console.log(tempMess);\r\n      setMessages(tempMess);\r\n      // setNewMess(tempMess);\r\n    })\r\n    .catch((err) => {\r\n      console.error(err.message);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    showMess();\r\n  }, [messages])\r\n\r\n  // console.log(messages.text);\r\n\r\n  const addMess = async () => {\r\n    console.log(newMess);\r\n    const docRef = await addDoc(collection(db, \"messages\"), {\r\n      message: newMess,\r\n      name: user.displayName,\r\n      image: user.photoURL,\r\n      time: new Date().toTimeString().split(\" \")[0],\r\n      email: user.email,\r\n    });\r\n    setNewMess(\"\");\r\n }\r\n\r\n  \r\n\r\n\r\n  const { user, logOut } = useUserAuth();\r\n  console.log(user);\r\n  const handleLogOut = async () => {\r\n    try{\r\n       await logOut();\r\n    }\r\n    catch(err){\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n  //modal function\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  console.log(messages);\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"main-nav\">\r\n        <header>\r\n          <h2 className=\"home-header\">chatsmith_</h2>\r\n        </header>\r\n\r\n        <section className=\"top-container\">\r\n         \r\n           <div>\r\n             <img onClick={openModal}  title=\"Notification\" className=\"icon-modal\" src=\"./assets/bell.svg\" alt=\"notification\" />\r\n             <Modal className=\"box-modal\"\r\n              isOpen={modalIsOpen}\r\n              onRequestClose={closeModal}>\r\n             <div className=\"box-top\">\r\n                <h2>New Notification's</h2> \r\n             </div>\r\n             <div className=\"box-bottom-line\"></div>\r\n             <div className=\"box-bottom\">\r\n               <img className=\"eye\" src=\"./images/eye-logo_adobespark.png\" alt=\"eye\" />\r\n               <h3>You're all caught up!</h3>\r\n               <h3>There is no any new notification.</h3>\r\n             </div>\r\n            </Modal>\r\n           </div> \r\n           \r\n           <div className=\"profile-box-top\" title=\"profile\">\r\n               <img className=\"profile-box-top\" src={user.photoURL} alt=\"user\" />\r\n           </div>\r\n\r\n           <img onClick={handleLogOut} className=\"icon\" src=\"./assets/code.svg\" title=\"sign out\" alt=\"user\" /> \r\n        </section>\r\n      </nav>\r\n\r\n      <div className=\"sendmsg-section\">\r\n\r\n        <div className=\"text-msg-box\">\r\n\r\n          <div className=\"head-welcome-text\">\r\n            <p>Welcome to <span className=\"bold\">chatsmith</span>. One of the best chatting <span className=\"bold\">platform</span> that are build by <span className=\"bold\">Aniket A. Raikwar</span>.</p>\r\n          </div>\r\n\r\n          <div className=\"show-text-msg\">\r\n               {\r\n                 messages.map((chat) => {\r\n    \r\n                   return user.email == chat.email ? \r\n                   (\r\n                    <div id={chat.id} className=\"text-box-1\">\r\n                      <div className=\"profile-box\">\r\n                          <img className=\"profile-box\" src={chat.image} alt=\"user\" />\r\n                      </div>\r\n\r\n                      <div key={chat.time} className=\"content-box-1\">\r\n                          <div className=\"user-name\">{chat.name}</div>\r\n                          <div key={chat.time} className=\"text\">{chat.message}</div>\r\n                          <div className=\"time\">send</div>\r\n                      </div>\r\n                    </div>\r\n                    ) \r\n                    :\r\n                    (\r\n                        <div id={chat.id} className=\"text-box\">\r\n                          <div className=\"profile-box\">\r\n                              <img className=\"profile-box\" src={chat.image} alt=\"user\" />\r\n                          </div>\r\n\r\n                          <div key={chat.time} className=\"content-box\">\r\n                              <div className=\"user-name\">{chat.name}</div>\r\n                              <div key={chat.time} className=\"text\">{chat.message}</div>\r\n                              {/* <div className=\"time\">{chat.time}</div> */}\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                 })\r\n               } \r\n          </div>\r\n        </div>\r\n      \r\n        <div className=\"send-box\">\r\n          <div className=\"input-child\">\r\n             <input \r\n               className=\"input-send\" \r\n               placeholder=\"Type a message...\" \r\n               type=\"text\"\r\n               value={newMess}\r\n               onChange={ e => {setNewMess(e.target.value)}}\r\n             />\r\n             <div className=\"msg-line\"></div>\r\n          </div>\r\n          <button onClick={addMess} className=\"btn-send\">SEND</button>\r\n        </div>    \r\n\r\n      </div>\r\n\r\n    \r\n    </div>\r\n      \r\n  ) \r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport './style.css'\r\nconst ForgetPass = () => {\r\n  return (\r\n    <div>\r\n        <nav className=\"nav-bar-forget\">\r\n          <h1 className=\"chatsmit-head-forget\">chatsmith_</h1>\r\n        </nav>\r\n\r\n        <main className=\"main-box-forget\">\r\n\r\n          <div className=\"container-forget\">\r\n            <h2 className=\"forget-forget\">Forget</h2>\r\n            <h2 className=\"pass-pass\">Password ?</h2>\r\n\r\n            <div className=\"forget-box\">\r\n              <h2>Enter your email address</h2>\r\n              <input type=\"email\" className=\"input-forget\"/>\r\n              <div className=\"forget-underline\"></div>\r\n            </div>\r\n\r\n            <div className=\"button-forget\">\r\n              <button className=\"btn-send-forget\">SEND LINK</button>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </main>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgetPass\r\n","import React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nconst eye = <FontAwesomeIcon icon={faEye} />;\r\n\r\n\r\n\r\nconst Signup = () => {\r\n\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  }\r\n\r\n\r\n  const { signUp } = useUserAuth();\r\n  // const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      try{\r\n        await signUp(email, password);\r\n        setError(\"\");\r\n        setSuccess(\"Account successfully created, Please verify your email.\");\r\n        // navigate(\"/\");\r\n      }\r\n      catch(err) {\r\n         setError(err.message);\r\n      }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n        <nav className=\"nav-bar\">\r\n          <h1 className=\"chatsmit-head\">chatsmith_</h1>\r\n        </nav>\r\n\r\n        <main className=\"main-box\">\r\n\r\n          <div className=\"form\">\r\n\r\n            <h2 className=\"sign-head\">Create your free account</h2>\r\n            <div className=\"new-sign-up\">\r\n              <h2 className=\"new\">Already have an account ?</h2>\r\n              <Link to=\"/\" style={{textDecoration:\"none\"}}>\r\n                 <h2 className=\"signup\">Sign in</h2>\r\n              </Link>\r\n            </div>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"container\">\r\n                <div className=\"block-box\">\r\n\r\n                  <button className=\"btn-google\">\r\n                    <img  className=\"google-logo\"src=\"./images/google-icon.svg\" alt=\"google\" />\r\n                    <h2 className=\"text-google\">CONTINUE WITH GOOGLE</h2>\r\n                  </button>\r\n\r\n                  {error && <div className=\"error-msg\">\r\n                    <p>{error}</p>\r\n                  </div>}\r\n\r\n                  {success && <div className=\"success-msg\">\r\n                    <p>{success}</p>\r\n                  </div>}\r\n                  \r\n\r\n                  <div className=\"input\">\r\n\r\n                     <h2 className=\"email-address-signup\">Email Address</h2>\r\n                     <div>\r\n                       <input \r\n                          className=\"input-email\" \r\n                          placeholder=\"Enter Email\" \r\n                          type=\"text\" \r\n                          name=\"email\" \r\n                          onChange={ e => setEmail(e.target.value)}\r\n                        />\r\n                     </div>\r\n\r\n                     <h2 className=\"password-signup\">Password</h2>\r\n\r\n                     <div className=\"password-toggle-box\">\r\n                       <input className=\"input-password\" \r\n                       placeholder=\"Enter Password\" \r\n                       type={passwordShown ? \"text\" : \"password\"} \r\n                       name=\"password\"\r\n                       onChange={ e => setPassword(e.target.value)} \r\n                       />\r\n                       <span>\r\n                        <i onClick={togglePasswordVisiblity}>{eye}</i>\r\n                       </span>\r\n                     </div>\r\n\r\n                     <div>\r\n                       <button className=\"btn-login\">SIGN UP</button>\r\n                     </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n            </form>\r\n\r\n            <div className=\"footer-signup\">\r\n               <h1><a id=\"github-link\" href=\"https://github.com/aniket-6234/chatsmith-real-time-chat-app\" target=\"_blank\">GitHub Link</a></h1>\r\n            </div>\r\n\r\n          </div>\r\n        </main>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Signup\r\n","import React from 'react' \nimport { Routes, Route } from 'react-router-dom';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { UserAuthContextProvider } from './context/UserAuthContext';\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport ForgetPass from './components/ForgetPass';\nimport SignUp from './components/SignUp'\nimport './App.css';\n\n\nfunction App() {\n\n  return (\n    <UserAuthContextProvider>\n      <Routes>\n        <Route path=\"/home\" element={<ProtectedRoute><Home /></ProtectedRoute>} />\n        <Route path=\"/\" element={<Login />} />\n        <Route path=\"/signup\" element={<SignUp />} />\n        <Route path=\"/forgetpassword\" element={<ForgetPass />} />\n      </Routes>\n    </UserAuthContextProvider>\n  )\n}\n\n\nexport default App;\n\n\n\n\n\n\n\n// google sign in \n\n// function App() {\n//   const [user] = useAuthState(auth);\n//   return (\n//     <div>\n//       {user ? <Home /> : <Login />}\n//     </div>\n//   )\n// }\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n        <App />\n      </Router>\n  </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}